# Welcome to Graphcool!
#
# This file is the main config file for your Graphcool Service.
# It's very minimal at this point and uses default values.
# We've included a hello world function here.
# Just run `graphcool deploy` to have the first running Graphcool Service.
#
# Check out some examples:
#    https://github.com/graphcool/framework/tree/master/examples
#
# Here are the reference docs of this definition format:
# https://www.graph.cool/docs/reference/service-definition/graphcool.yml-foatho8aip
#
# Happy Coding!


# In the types.graphql you define your data schema
types: ./types.graphql


functions:

# added by email-password template: (please uncomment) 
   signup:
     type: resolver
     schema: src/email-password/signup.graphql
     handler:
       code: src/email-password/signup.ts
 
   authenticate:
     type: resolver
     schema: src/email-password/authenticate.graphql
     handler:
       code: src/email-password/authenticate.ts
 
   loggedInUser:
     type: resolver
     schema: src/email-password/loggedInUser.graphql
     handler:
       code: src/email-password/loggedInUser.ts
   
   register: 
     type: resolver
     schema: src/email-password/register.graphql
     handler:
       code: src/email-password/register.ts

   generateToken: 
     type: resolver
     schema: src/email-password/generateToken.graphql
     handler:
       code: src/email-password/generateToken.ts

   validateDomain:
     type: resolver
     schema: src/email-password/validate.graphql
     handler:
       code: src/email-password/validate.ts

# Model/Relation permissions are used to limit the API access
# To take the burden of thinking about those while development, we
# preconfigured the wildcard ("*") permission that allows everything
# Read more here:
# https://www.graph.cool/docs/reference/auth/authorization/overview-iegoo0heez
permissions:
   - operation: PostOnPostMeta.*
   - operation: ProjectOnPost.*
   - operation: PostOnDocument.*
   - operation: DocumentOnVersion.*
   - operation: UserOnProject.*
   - operation: UserOnPost.*
   - operation: PostOnImage.*
   - operation: ProjectOnDomain.*
   - operation: AccessGroupPosts.*
   - operation: AccessGroupUsers.*
   - operation: AccessGroupProjects.*
   - operation: AccessGroup.read
   - operation: AccessGroup.update
   - operation: User.create
   - operation: Image.read
   - operation: Image.update
   - operation: Image.create
   - operation: Image.delete
   - operation: Domain.read
   - operation: Domain.update
   - operation: Domain.create
   - operation: Domain.delete
   - operation: PostMeta.create
     authenticated: true
   - operation: PostMeta.update
     authenticated: true
   - operation: PostMeta.read
     authenticated: true
   - operation: PostMeta.delete
     authenticated: true
   - operation: Document.create
     authenticated: true
   - operation: Document.update
     authenticated: true
   - operation: Document.delete
     authenticated: true
   - operation: Document.read
     authenticated: true
   - operation: Version.create
     authenticated: true
   - operation: Version.update
     authenticated: true
   - operation: Version.delete
     authenticated: true
   - operation: Version.read
     authenticated: true
   - operation: AccessGroup.create
     authenticated: true
   - operation: User.read
     authenticated: true
   - operation: User.update
     authenticated: true
   - operation: Project.create
     authenticated: true
   - operation: Post.create
     authenticated: true
   - operation: Post.read
     authenticated: true
     query: src/permissions/Post.graphql:read
   - operation: Post.update
     authenticated: true
     query: src/permissions/Post.graphql:update
   - operation: Post.delete
     authenticated: true
     query: src/permissions/Post.graphql:delete
   - operation: Project.read
     authenticated: true
     query: src/permissions/Project.graphql:read
   - operation: Project.update
     authenticated: true
     query: src/permissions/Project.graphql:update
   - operation: Project.delete
     authenticated: true
     query: src/permissions/Project.graphql:delete


# Your root tokens used for functions to get full access to the API
# Read more here:
# https://www.graph.cool/docs/reference/auth/authentication/authentication-tokens-eip7ahqu5o
rootTokens:
   - default
